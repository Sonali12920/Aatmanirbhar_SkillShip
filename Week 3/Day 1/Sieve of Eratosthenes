https://practice.geeksforgeeks.org/problems/sieve-of-eratosthenes/0

Sieve of Eratosthenes

Given a number N, calculate the prime numbers upto N using Sieve of Eratosthenes.  

Input: 
The first line of the input contains T denoting the number of testcases. T testcases follow. Each testcase contains one line of input containing N.

Output: 
For all testcases, in a new line, print all the prime numbers upto or equal to N.

Constraints:
1 <= T<= 100
1 <= N <= 104

Example:
Input:
2
10
35
Output:
2 3 5 7
2 3 5 7 11 13 17 19 23 29 31 


Solution:

#include <bits/stdc++.h>
using namespace std;

void soe(int n)
{
    bool prm[n+1];
    for(int i=0;i<=n;i++)
    {
        prm[i]=true;
    }
    prm[0]=false;
    prm[1]=false;
    for(int i=2;i*i<=n;i++)
    {
        if(prm[i]==true)
        {
            for(int j=i*i;j<=n;j=j+i)
            {
                prm[j]=false;
            }
        }
    }
    for(int i=0;i<=n;i++)
    {
        if(prm[i])
        cout<<i<<" ";
    }
    cout<<"\n";
}
int main()
 {
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    soe(n);
	}
	return 0;
}