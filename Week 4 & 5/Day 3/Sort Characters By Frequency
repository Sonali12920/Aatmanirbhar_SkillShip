https://leetcode.com/problems/sort-characters-by-frequency/

Sort Characters By Frequency

Given a string, sort it in decreasing order based on the frequency of characters.
Example 1:
Input:
"tree"
Output:
"eert"
Explanation:
'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.


Solution:

class Solution {
public:
    string frequencySort(string s) {
        unordered_map<char,int>m;
        for(int i=0;i<s.size();i++)
            m[s[i]]++;
        
        priority_queue<pair<int,char>>pq;
        for(auto x:m)
        pq.push({x.second,x.first});
        string st="";
        while(!pq.empty())
        {
            pair<int,char>x=pq.top();
            int temp=x.first;
            while(temp--)
            st+=x.second;
            pq.pop();
        }
        return st;
    }
};