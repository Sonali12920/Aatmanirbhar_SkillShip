https://leetcode.com/problems/design-hashmap/

Design HashMap

Design a HashMap without using any built-in hash table libraries.
To be specific, your design should include these functions:
put(key, value) : Insert a (key, value) pair into the HashMap. If the value already exists in the HashMap, update the value.
get(key): Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.
remove(key) : Remove the mapping for the value key if this map contains the mapping for the key.



Solution:

class MyHashMap {
public:
    vector<pair<int,int>> m[1000];
    /** Initialize your data structure here. */
    MyHashMap() {
        
    }
    
    /** value will always be non-negative. */
    void put(int key, int value) {
         int hn = key % 1000;
        for(int i=0; i<m[hn].size(); i++){
            if(m[hn][i].first == key){
                m[hn][i].second = value;
                return;
            }
        }
        m[hn].push_back({key,value});
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    int get(int key) {
          int hn = key%1000;
        for(int i=0; i<m[hn].size(); i++){
            if(m[hn][i].first == key){
                return m[hn][i].second;
            }
        }
        return -1;
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    void remove(int key) {
         int hn = key%1000;
        for(int i=0; i<m[hn].size(); i++){
            if(m[hn][i].first == key){
                m[hn].erase(m[hn].begin()+i);
                return;
            }
        }
    }
};
