https://leetcode.com/problems/isomorphic-strings/

Isomorphic Strings

Given two strings s and t, determine if they are isomorphic.
Two strings are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false


Solution:

class Solution {
public:
    bool isIsomorphic(string s, string t) {
           bool res = true;
        unordered_map<char, char> m;
        if(s.size() != t.size())
            return false;
        for (int i = 0; i < s.size(); i++)
        {
            for (auto j:m)
            {
                if (j.second == t[i] && j.first != s[i])
                    return false;
            }
            if (m.count(s[i]))
            {
                if (m[s[i]] != t[i] )
                    res= false;
            }
            else
                m[s[i]] = t[i];
        }
        
        return res;
    }
};