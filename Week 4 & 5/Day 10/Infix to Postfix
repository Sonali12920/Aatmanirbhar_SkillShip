https://practice.geeksforgeeks.org/problems/infix-to-postfix/0

Infix to Postfix

Given an infix expression in the form of a string str. Conver this infix expression to postfix expression.

Infix expression: The expression of the form a op b. When an operator is in-between every pair of operands.
Postfix expression: The expression of the form a b op. When an operator is followed for every pair of operands.
Input:
The first line of input contains an integer T denoting the number of test cases. The next T lines contains an infix expression.The expression contains all characters and ^,*,/,+,-.

Output:
For each testcase, in a new line, output the infix expression to postfix expression.

Constraints:
1 <= T <= 100
1 <= length of str <= 103

Example:
Input:
2
a+b*(c^d-e)^(f+g*h)-i
A*(B+C)/D

Output:
abcd^e-fgh*+^*+i-
ABC+*D/


Solution:

#include <bits/stdc++.h>
#include <stack>
using namespace std;

int prior(char x){
    if(x=='+'||x=='-')
       return 0;
    if(x=='*')
       return 1;
    if(x=='/')
       return 2;
    if(x=='^') 
       return 3;
    return -1;
}
bool operand(char c){
    if(c>='0' && c<='9') 
      return true;
    if(c>='a' && c<='z') 
      return true;
    if(c>='A' && c<='Z') 
      return true;
    return false;
}
string postfix(string s){
    int n=s.length();
    stack<char> st;
    string res="";
    for(int i=0;i<n;i++){
        if(s[i]=='(') st.push(s[i]); 
        else if(s[i]==')'){
            while(!st.empty()&&st.top()!='('){
                res+=st.top();
                st.pop();
            }
            st.pop();
        }
        else if(operand(s[i])) res+=s[i];
        else{
            while(!st.empty()&&prior(s[i])<=prior(st.top())){
                res+=st.top();
                st.pop();
            }
            st.push(s[i]);
        }
    }    
    while(!st.empty()){
        res+=st.top();
        st.pop();
    }
    return res;
}

int main()
 {
    int t;
    cin>>t;
    string s;
    while(t--){
        cin>>s;
        cout<<postfix(s)<<endl;
    }
	return 0;
}